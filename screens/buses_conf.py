import json

from hammett.core import Button, Screen
from hammett.core.constants import RenderConfig, SourceTypes

from config import BUSES_SCREEN_DESCRIPTION
from screens import mainMenu


class BusesScreen(Screen):
    _routes = []

    @classmethod
    def set_routes(cls, routes):
        cls._routes = routes

    description=BUSES_SCREEN_DESCRIPTION

    async def get_config(self, update, context, **kwargs):
        keyboard = [
            [
                Button(
                    route['name'],
                    SelectedRoutes,
                    source_type=SourceTypes.MOVE_SOURCE_TYPE,
                    payload=json.dumps(route),
                ),
            ] for route in self._routes
        ]

        config = RenderConfig(
            description=BUSES_SCREEN_DESCRIPTION,
            keyboard=[
                *keyboard,
                [Button(
                    '–ù–∞ –≥–ª–∞–≤–Ω—É—é',
                    mainMenu.MainMenuScreen,
                    source_type=SourceTypes.MOVE_SOURCE_TYPE,
                )],
            ],
        )
        return config

class SelectedRoutes(Screen):
    async def get_config(self, update, context, **kwargs):

        route_data = await Screen.get_payload(update, context)
        route_data = json.loads(route_data)

        description = (
            f"üöå <b>{route_data['name']}</b>\n\n"
            f"‚è± –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {route_data.get('path', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {route_data.get('price', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}"
        )

        keyboard = await self.add_default_keyboard(update, context, route_data)

        return RenderConfig(description=description, keyboard=keyboard)

    async def add_default_keyboard(self, update, context, route_data):
        return [
            [
                Button(
                    'üó∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ',
                    route_data['map_url'],
                    source_type=SourceTypes.URL_SOURCE_TYPE,
                ),
            ],
            [
                Button(
                    '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º',
                    BusesScreen,
                    source_type=SourceTypes.MOVE_SOURCE_TYPE,
                ),
                Button(
                    'üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é',
                    mainMenu.MainMenuScreen,
                    source_type=SourceTypes.MOVE_SOURCE_TYPE,
                ),
            ],
        ]
